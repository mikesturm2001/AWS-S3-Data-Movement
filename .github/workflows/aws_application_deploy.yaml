name: Deploy Application

on: [workflow_dispatch]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Change to your desired AWS region

    - name: Load environment variables
      run: |
        source $GITHUB_WORKSPACE/.github/workflows/workflow-parameters.env
        echo "APPLICATION_DESTORY=$DESTROY" >> $GITHUB_ENV
      env:
        GITHUB_ENV: ${{ github.workspace }}/.env

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform init
      working-directory: ./terraform/live/dev/services/application
      run: terraform init

    - name: Set Terraform Variables
      run: |
        echo "TF_VAR_s3_drop_zone_bucket=s3-drop-zone-12134477a" >> $GITHUB_ENV
        echo "TF_VAR_s3_snowflake_bucket=snowflake-drop-zone-12134477a" >> $GITHUB_ENV
        echo "TF_VAR_min_size=0" >> $GITHUB_ENV
        echo "TF_VAR_max_size=2" >> $GITHUB_ENV

    - name: Terraform plan
      working-directory: ./terraform/live/dev/services/application
      id: tf-plan
      run: terraform plan -out=tfplan
      
    - name: Terraform apply 
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform/live/dev/services/application
      run: terraform apply -auto-approve tfplan

    - name: Clean up
      if: ${{ env.APPLICATION_DESTORY }} == 'true'
      working-directory: ./terraform/live/dev/services/application
      run: terraform destroy -auto-approve

# Add any additional steps or customizations as needed